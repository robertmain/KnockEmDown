<!DOCTYPE html>
<html>
	<head>
		<meta charset="utf-8">
		<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">
		<meta name="viewport" content="width=1024, user-scalable=no">
		<title>{{ packageFile.name }} v{{ packageFile.version }}</title>
		<link rel="stylesheet" href="{{ config.presentation.theme_directory }}/{{ config.presentation.theme }}/style.css" />
		<link type="text/css" rel="Stylesheet" href="{{config.presentation.theme_directory}}/{{config.presentation.theme}}/prettify.css" />
		<link rel="stylesheet" href="css/transitions/{{ config.presentation.transition }}.css" />
		<link rel="stylesheet" href="css/fragment-transitions/{{ config.presentation.fragment_transition }}.css" />
		<style type="text/css">
			html, body { 
				width: 100%;
				height: 100%;
				overflow: hidden;
			}
			.slides {
				transform-origin: top left;
				-webkit-transform-origin: top left;
			
				width: 1024px; 
				height: 768px;
			}
			.slides-positioning {
				margin: 0 auto;
			}
		</style>
		<script src="/js/jquery-2.0.3.min.js"></script>
		<script src="/js/prettify/prettify.js" type="text/javascript"></script>
		<script src="/socket.io/socket.io.js"></script>
		<script type="text/javascript">
			var state = {
				"numSlides": 0,
				"numFragments": [],
				"currentSlide": 1,
				"currentFragment": 0,
				"blackout": false
			};

			function updateSlides(){
				$(".slide-fragment").removeClass("fragment-next fragment-after");
				var slides = $(".slide");
				slides.removeClass("slide-before slide-prev slide-current slide-next slide-after");
				if(state.currentSlide > 2){
					slides.filter(":lt("+(state.currentSlide-2)+")").addClass("slide-before");
				}
				if(state.currentSlide >= 2){
					slides.filter(":eq("+(state.currentSlide-2)+")").addClass("slide-prev");
				}
				slides.filter(":eq("+(state.currentSlide-1)+")").addClass("slide-current");
				slides.filter(":eq("+(state.currentSlide)+")").addClass("slide-next").find(".slide-fragment").addClass("fragment-after");
				slides.filter(":gt("+(state.currentSlide)+")").addClass("slide-after").find(".slide-fragment").addClass("fragment-after");
				
				var frags = $(".slide-current .slide-fragment");
				frags.filter(":eq("+(state.currentFragment)+")").addClass("fragment-next");
				frags.filter(":gt("+(state.currentFragment)+")").addClass("fragment-after");

if(frags.size()){
	console.log("Fragment");
}
				$('span#currentSlide').text(state.currentSlide);
				$('span#numSlides').text(state.numSlides);
				if(state.blackout){
					$('.slides').addClass('slide-hide');
				}
				else{
					$('.slides').removeClass('slide-hide');
				}
			}

			var socket;

			var bindEvents = (function(){
				var eventsBound = false;
				return function(){
					if(eventsBound)
						return;
					eventsBound = true;
					$(document).keydown(function(e){
						//Next Slide
						if(e.which == 39){
							socket.emit("next_slide",{});
							e.preventDefault();
							e.stopPropagation();
						}
						//Previous Slide
						else if(e.which == 37){
							socket.emit("prev_slide",{});
							e.preventDefault();
							e.stopPropagation();
						}
						//Toggle Blackout
						else if(e.which == 66){
							socket.emit("toggle_blackout",{});
							e.preventDefault();
							e.stopPropagation();
						}
					});
				};
			})();

			$(document).ready(function(){
				state.numSlides = $(".slide").size();
				updateSlides();
				setTimeout(function(){$(".slides, .slide").addClass("slide-transition");},1);
				socket = io.connect();
				socket.on("state",function(newState){
					state = newState;
					updateSlides();
					var pageTitle = $('title').text();
					if(state.blackout){
						$('title').text("");
					}
				});
				socket.on("auth_success",function(){
					bindEvents();
				});
				socket.on("auth_challenge",function(){
					//console.log("Unhandled auth_challenge event, using hardcoded password for now");
					socket.emit("auth",{"password": "1234"});
				});
				socket.on("auth_fail",function(){
					//console.log("Unhandled auth_fail event");
				});

				$('pre').addClass('prettyprint linenums');
				prettyPrint();
				$(window).resize();
			});
			$(window).resize(function(){
				var scaleW = $(window).innerWidth() / $(".slides").innerWidth();
				var scaleH = $(window).innerHeight() / $(".slides").innerHeight();
				var scale = Math.min(scaleW, scaleH);
				$(".slides").css({"transform":"scale("+scale+")","-webkit-transform":"scale("+scale+")"});
				$(".slides-positioning").css({"width": $(".slides").innerWidth()*scale, "height": $(".slides").innerHeight()*scale});
				$("#floater").css("margin-bottom", -$(".slides").innerHeight() * scale * 0.5);
			});
		</script>
	</head>
	<body>
		{{ip}}
		<div id="floater"></div>
		<div class="slides-positioning">
			<div class="slides">
				<div class="logo-container">
					<div style="background-image: url('/img/node-logo.svg'); background-position: -3px -3px; width: 50px; height: 50px; background-color: #FFF; right: 12px; top: 12px; position: absolute; background-size: 120px; border-radius: 5px"></div>
				</div>
				{{#each slides}}
					{{{.}}}
				{{/each}}
				<h4 class="muted" style="position: absolute; bottom: 10px; right: 10px">
					<span id="currentSlide"></span>/<span id="numSlides"></span>
				</h4>
			</div>
		</div>
	</body>
</html>